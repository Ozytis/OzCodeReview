
//----------------------
// <auto-generated>
//     Generated by Ozytis Model Generator  DO NOT EDIT!
// </auto-generated>
//----------------------

using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Ozytis.Common.Core.Api;
using Ozytis.Common.Core.ClientApi;
using System.Linq;
using Api;


using Entities;

using System.Linq.Expressions;

namespace ClientApi
{
	public class AuthService : BaseService
	{
		public async Task<OperationResult<LoginResult>> LoginAsync(LoginModel model, bool anonymous = false, Expression<Action> onConnectionRetrievedCallBack = null)
		{
			string url = $"api/auth/login";
			var result = await this.PostAsync<LoginResult>(url, model, anonymous: anonymous, onConnectionRetrievedCallBack: onConnectionRetrievedCallBack);
			return result;
		}

		public async Task<OperationResult<SendPasswordIsLostResult>> SendPasswordIsLostAsync(SendPasswordIsLostModel model, bool anonymous = false, Expression<Action> onConnectionRetrievedCallBack = null)
		{
			string url = $"api/auth/sendPasswordIsLost";
			var result = await this.PostAsync<SendPasswordIsLostResult>(url, model, anonymous: anonymous, onConnectionRetrievedCallBack: onConnectionRetrievedCallBack);
			return result;
		}

		public async Task<UserModel> GetCurrentUserAsync()
		{
			string url = $"api/auth/current";
			var result = await this.GetAsync<UserModel>(url);
			return result;
		}

		public async Task<UserModel[]> GetAllUsersAsync(Expression<Func<IQueryable<ApplicationUser>, IQueryable<ApplicationUser>>> query)
		{
			string url = $"api/auth/";
			var result = await this.GetListAsync<ApplicationUser, UserModel[]>(url, query);
			return result;
		}

		public async Task<OperationResult<object>> PasswordResetAsync(PasswordResetModel model, bool anonymous = false, Expression<Action> onConnectionRetrievedCallBack = null)
		{
			string url = $"api/auth/resetpassword";
			var result = await this.PutAsync<object>(url, model, anonymous: anonymous, onConnectionRetrievedCallBack: onConnectionRetrievedCallBack);
			return result;
		}

		public async Task<OperationResult<UserModel>> RegisterAsync(UserCreationModel model, Expression<Action> onConnectionRetrievedCallBack = null)
		{
			string url = $"api/auth/";
			var result = await this.PostAsync<UserModel>(url, model, onConnectionRetrievedCallBack: onConnectionRetrievedCallBack);
			return result;
		}

		public async Task<OperationResult<object>> RemoveUserAsync(string userId, Expression<Action> onConnectionRetrievedCallBack = null)
		{
			string url = $"api/auth/{userId}";
			var result = await this.DeleteAsync<object>(url, onConnectionRetrievedCallBack: onConnectionRetrievedCallBack);
			return result;
		}

		public async Task<OperationResult<UserModel>> UpdateMyAccountAsync(UserUpdateModel model, Expression<Action> onConnectionRetrievedCallBack = null)
		{
			string url = $"api/auth/myaccount";
			var result = await this.PutAsync<UserModel>(url, model, onConnectionRetrievedCallBack: onConnectionRetrievedCallBack);
			return result;
		}

		public async Task<OperationResult<object>> RequestEmailChangeAsync(EmailUpdateModel model, Expression<Action> onConnectionRetrievedCallBack = null)
		{
			string url = $"api/auth/email";
			var result = await this.PutAsync<object>(url, model, onConnectionRetrievedCallBack: onConnectionRetrievedCallBack);
			return result;
		}

		public async Task<OperationResult<object>> UpdateMyPasswordAsync(PasswordUpdateModel model, Expression<Action> onConnectionRetrievedCallBack = null)
		{
			string url = $"api/auth/mypassword";
			var result = await this.PutAsync<object>(url, model, onConnectionRetrievedCallBack: onConnectionRetrievedCallBack);
			return result;
		}

	}
}
